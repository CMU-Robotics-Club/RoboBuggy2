<!-- roslaunch buggy main.launch -->

<launch>
    <arg name="controller"      default="stanley" />
    <arg name="start_dist"      default="0.0" />
    <arg name="path"      default="buggycourse_safe_1.json" />

    <include file="$(find microstrain_inertial_driver)/launch/microstrain.launch">
        <arg name="params_file" value="/rb_ws/src/buggy/INS_params.yml"/>
    </include>

    <!-- run a sim with name = NAND at velocity ~= 0 -->
    <arg name="starting_pose"    default="UC_TO_PURNELL" />
    <arg name="velocity"         default="0.0001" />
    <arg name="buggy_name"       default="NAND" />

    <node name="sim_2d_engine" pkg="buggy" type="engine.py" output="screen"
        args="$(arg starting_pose) $(arg velocity) $(arg buggy_name)"/>

    <!-- <remap from="/SC/nav/odom" to="/nav/odom"/>
    <remap from="/buggy/input/steering" to="/SC/buggy/input/steering"/> -->

    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
        <param name="port" type="string" value="/dev/ttyUSB0"/>
        <param name="baud" type="int" value="1000000"/>
    </node>
    <node name="serial_node2" pkg="rosserial_python" type="serial_node.py">
        <param name="port" type="string" value="/dev/ttyACM1"/>
        <param name="baud" type="int" value="115200"/>
    </node>
    <node name="foxglove" pkg="foxglove_bridge" type="foxglove_bridge" />
    <node name="telematics" pkg="buggy" type="telematics.py" />

    <!-- Run the simulation with NAND -->
    <arg name="autonsystem_args" default="--controller $(arg controller) --dist 0.0 --traj $(arg path) --self_name SC --other_name NAND" />
    <node name="auton_system" pkg="buggy" type="autonsystem.py" output="screen" args="$(arg autonsystem_args)"/>
</launch>
